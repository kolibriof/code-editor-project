[{"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\index.tsx":"1","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CodeEditor.tsx":"2","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\Preview.tsx":"3","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\index.ts":"4","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\plugins\\fetch-plugin.ts":"5","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\plugins\\unpkg-path-plugin.ts":"6","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\resizable-componets\\Resizable.tsx":"7","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CodeCell.tsx":"8","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\TextEditor.tsx":"9","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\store.ts":"10","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\textEditorSlice.ts":"11","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\helpers\\hooks.ts":"12","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\codeCellSlice.ts":"13","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\cellsReducer.ts":"14","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CellList.tsx":"15","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CellListItem.tsx":"16","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\ActionBar.tsx":"17","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\buttons\\ActionBarButton.tsx":"18","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\buttons\\AddCell.tsx":"19","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\bundlesReducer.ts":"20"},{"size":633,"mtime":1696508803302,"results":"21","hashOfConfig":"22"},{"size":2363,"mtime":1696335837605,"results":"23","hashOfConfig":"22"},{"size":1486,"mtime":1696335846352,"results":"24","hashOfConfig":"22"},{"size":1139,"mtime":1696242104108,"results":"25","hashOfConfig":"22"},{"size":1797,"mtime":1609420966000,"results":"26","hashOfConfig":"22"},{"size":830,"mtime":1609414784000,"results":"27","hashOfConfig":"22"},{"size":2236,"mtime":1696238174463,"results":"28","hashOfConfig":"22"},{"size":1559,"mtime":1696510252018,"results":"29","hashOfConfig":"22"},{"size":1790,"mtime":1696506927963,"results":"30","hashOfConfig":"22"},{"size":705,"mtime":1697037323144,"results":"31","hashOfConfig":"22"},{"size":473,"mtime":1696506769418,"results":"32","hashOfConfig":"22"},{"size":273,"mtime":1696335864973,"results":"33","hashOfConfig":"22"},{"size":889,"mtime":1696335927842,"results":"34","hashOfConfig":"22"},{"size":1967,"mtime":1697036875225,"results":"35","hashOfConfig":"22"},{"size":622,"mtime":1696946148340,"results":"36","hashOfConfig":"22"},{"size":818,"mtime":1696510364786,"results":"37","hashOfConfig":"22"},{"size":629,"mtime":1696509853001,"results":"38","hashOfConfig":"22"},{"size":639,"mtime":1696509712786,"results":"39","hashOfConfig":"22"},{"size":1207,"mtime":1696946146486,"results":"40","hashOfConfig":"22"},{"size":1221,"mtime":1697038081681,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},"69aaqm",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"45"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\index.tsx",["87","88"],"import 'bulmaswatch/superhero/bulmaswatch.min.css'\nimport ReactDOM from 'react-dom';\nimport CodeCell from './components/CodeCell';\nimport TextEditor from './components/TextEditor';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\nimport React from 'react';\nimport CellList from './components/CellList';\nimport '@fortawesome/fontawesome-free/css/all.min.css'\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <div>\n        {/* <TextEditor /> */}\n        {/* <CodeCell /> */}\n        <CellList />\n      </div>\n    </Provider>\n  );\n};\n\nReactDOM.render(<App />, document.querySelector('#root'));\n",["89","90"],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CodeEditor.tsx",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\Preview.tsx",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\index.ts",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\plugins\\fetch-plugin.ts",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\plugins\\unpkg-path-plugin.ts",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\utils\\resizable-componets\\Resizable.tsx",["91"],"import { ResizableBox, ResizableBoxProps } from \"react-resizable\";\r\nimport \"../../styles/resizable.css\"\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\ninterface ResizableProp {\r\n    direction: 'y' | 'x';\r\n}\r\n\r\nexport const Resizable: React.FC<ResizableProp> = ({ direction, children }) => {\r\n    let resizableProps: ResizableBoxProps;\r\n    const [windowSize, setWindowSize] = useState({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight\r\n    });\r\n    const [widthState, setWidthState] = useState<number>(window.innerWidth * 0.5)\r\n\r\n    useEffect(() => {\r\n        let timer: any;\r\n        const listener = () => {\r\n            if (timer) {\r\n                clearTimeout(timer)\r\n            }\r\n            timer = setTimeout(() => {\r\n                setWindowSize({\r\n                    width: window.innerWidth,\r\n                    height: window.innerHeight\r\n                })\r\n                if (window.innerWidth * 0.75 < widthState) {\r\n                    setWidthState(window.innerWidth * 0.75)\r\n                }\r\n            }, 200)\r\n        }\r\n        window.addEventListener('resize', listener)\r\n        return () => {\r\n            window.removeEventListener('resize', listener)\r\n        }\r\n    }, [])\r\n    switch (direction) {\r\n        case \"x\":\r\n            resizableProps = {\r\n                className: 'resize-horizontal',\r\n                height: Infinity,\r\n                width: widthState,\r\n                resizeHandles: ['e'],\r\n                minConstraints: [windowSize.width * 0.1, Infinity],\r\n                maxConstraints: [windowSize.width * 0.9, Infinity],\r\n                onResizeStop: (_, data) => {\r\n                    setWidthState(data.size.width)\r\n                }\r\n            }\r\n            break;\r\n        case \"y\":\r\n            resizableProps = {\r\n                height: windowSize.height * 0.2,\r\n                width: Infinity,\r\n                resizeHandles: ['s'],\r\n                maxConstraints: [Infinity, windowSize.height * 0.9],\r\n                minConstraints: [Infinity, windowSize.height * 0.1]\r\n            }\r\n            break\r\n    }\r\n\r\n    return (\r\n        <ResizableBox {...resizableProps}>\r\n            {children}\r\n        </ResizableBox>\r\n    )\r\n}","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CodeCell.tsx",["92","93","94"],"import { useEffect } from \"react\";\r\nimport { CodeEditor } from './CodeEditor';\r\nimport { Preview } from './Preview';\r\nimport { bundle } from \"../utils\"\r\nimport { Resizable } from \"../utils/resizable-componets/Resizable\";\r\nimport { useAppDispatch, useAppSelector } from \"../state/helpers/hooks\";\r\nimport { setCode, setError, setInput } from \"../state/codeCellSlice\";\r\nimport React from \"react\"\r\nimport { Cell } from \"../state/helpers/cell\";\r\nimport { updateCell } from \"../state/cellsReducer\";\r\n\r\ninterface CodeCellProps {\r\n  cell: Cell;\r\n}\r\n\r\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\r\n  const { code, error } = useAppSelector(store => store.codeCellSlice)\r\n  const dispatch = useAppDispatch()\r\n  const bundleCode = async () => {\r\n    const output = await bundle(cell.content!)\r\n    setCode(output.code)\r\n    dispatch(setCode(output.code))\r\n    dispatch(setError(output.error))\r\n  }\r\n  useEffect(() => {\r\n    const timer = setTimeout(async () => {\r\n      bundleCode()\r\n    }, 1000)\r\n    return () => {\r\n      clearTimeout(timer)\r\n    }\r\n  }, [cell.content!])\r\n  return (\r\n    <>\r\n      <Resizable direction=\"y\">\r\n        <div style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\", alignItems: 'center' }}>\r\n          <Resizable direction=\"x\">\r\n            <CodeEditor initialValue={cell.content!} onChange={(value) => dispatch(updateCell({ id: cell.id, content: value }))} />\r\n          </Resizable>\r\n          <Preview code={code} status={error} />\r\n        </div>\r\n      </Resizable>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CodeCell;\r\n","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\TextEditor.tsx",["95"],"import MDEditor from \"@uiw/react-md-editor\"\r\nimport { useEffect, useRef } from \"react\"\r\nimport \"../styles/text-editor.css\"\r\nimport { useAppDispatch, useAppSelector } from \"../state/helpers/hooks\"\r\nimport { setEditing } from \"../state/textEditorSlice\"\r\nimport React from \"react\"\r\nimport { Cell } from \"../state/helpers/cell\"\r\nimport { updateCell } from \"../state/cellsReducer\"\r\n\r\ninterface TextCellProps {\r\n    cell: Cell;\r\n}\r\n\r\nconst TextEditor: React.FC<TextCellProps> = ({ cell }) => {\r\n    const dispatch = useAppDispatch()\r\n    const { isEditing } = useAppSelector((store) => store.textEditorSlice)\r\n    const editorRef = useRef<HTMLDivElement | null>(null)\r\n\r\n    useEffect(() => {\r\n        const listener = (e: MouseEvent) => {\r\n            if (editorRef.current && e.target && editorRef.current.contains(e.target as Node)) {\r\n                return;\r\n            }\r\n            dispatch(setEditing(false))\r\n        }\r\n        document.addEventListener(\"click\", listener, {\r\n            capture: true\r\n        })\r\n        return () => {\r\n            document.removeEventListener(\"click\", listener, {\r\n                capture: true\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    if (isEditing) {\r\n        return (\r\n            <div ref={editorRef} className=\"text-editor\">\r\n                <MDEditor value={cell.content} onChange={(e) => {\r\n                    dispatch(updateCell({ id: cell.id, content: e! }))\r\n                }} />\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"text-editor card\" onClick={() => dispatch(setEditing(true))}>\r\n            <div className=\"card-content\">\r\n                <MDEditor.Markdown source={cell.content || \"Click here to start editing\"} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextEditor","C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\store.ts",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\textEditorSlice.ts",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\helpers\\hooks.ts",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\codeCellSlice.ts",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\cellsReducer.ts",["96"],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CellList.tsx",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\CellListItem.tsx",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\ActionBar.tsx",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\buttons\\ActionBarButton.tsx",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\components\\buttons\\AddCell.tsx",[],"C:\\Users\\dsavc3\\Desktop\\code-editor\\code-editor\\src\\state\\bundlesReducer.ts",[],{"ruleId":"97","severity":1,"message":"98","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":16},{"ruleId":"97","severity":1,"message":"101","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":18},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":38,"column":8,"nodeType":"108","endLine":38,"endColumn":10,"suggestions":"109"},{"ruleId":"97","severity":1,"message":"110","line":7,"column":29,"nodeType":"99","messageId":"100","endLine":7,"endColumn":37},{"ruleId":"106","severity":1,"message":"111","line":32,"column":6,"nodeType":"108","endLine":32,"endColumn":21,"suggestions":"112"},{"ruleId":"106","severity":1,"message":"113","line":32,"column":7,"nodeType":"114","endLine":32,"endColumn":20},{"ruleId":"106","severity":1,"message":"115","line":34,"column":8,"nodeType":"108","endLine":34,"endColumn":10,"suggestions":"116"},{"ruleId":"97","severity":1,"message":"117","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},"@typescript-eslint/no-unused-vars","'CodeCell' is defined but never used.","Identifier","unusedVar","'TextEditor' is defined but never used.","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'widthState'. Either include it or remove the dependency array.","ArrayExpression",["120"],"'setInput' is defined but never used.","React Hook useEffect has a missing dependency: 'bundleCode'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","TSNonNullExpression","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["122"],"'createAsyncThunk' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [widthState]",{"range":"129","text":"130"},"Update the dependencies array to be: [bundleCode]",{"range":"131","text":"132"},"Update the dependencies array to be: [dispatch]",{"range":"133","text":"134"},[1234,1236],"[widthState]",[1058,1073],"[bundleCode]",[1172,1174],"[dispatch]"]